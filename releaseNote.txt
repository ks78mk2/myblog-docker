1. created-by Jskim

2. Directory 
  # my-blog (react front-end)
    - React - listen 8080

  # my-blog-server (nest back-end)
    - Nest.js - listen 9090 

  # nginx 
    - Reverse Proxy
      :80/       => my-blog        
      :80/api/v1 => my-blog-server

  # mysql
    - Mysql 5.7.x Database 

3. History
  2021.07.21 - jenkins + docker를 이용한 전체 배포 초기 설정 완료 

4. env
  [Oracle Cloud]
    1. 146.56.137.7(opc) - nginx + mysql + react + nest.js
        - docker version - 20.10.7 
        - docker-compose - 1.24.1
        
    2. 146.56.163.92(jenkins) jenkins
        - Setting 
          1) git push Trigger
            - GITHUB WEBHOOK 
            - Dashboard -> my-blog (git, docker-compose를 이용한 전체 배포 nginx + react + nest.js + mysql)
                        -> my-blog-nest  (docker-hub 를 이용한 nest.js 개별 배포)
                        -> my-blog-react (docker-hub 를 이용한 react 개별 배포, ./build 전체 git push 후 배포)
          2) Command
            가) my-blog 
              [빌드 후 배포]
                sudo yum install git
                sudo docker stop $(sudo docker ps -a -q)
                sudo docker rm $(sudo docker ps -a -q)
                sudo docker rmi $(sudo docker images -q)

                sudo rm -rf myblog-docker
                sudo git clone https://github.com/ks78mk2/myblog-docker.git
                cd myblog-docker

                sudo git clone https://github.com/ks78mk2/my-blog.git
                sudo git clone https://github.com/ks78mk2/my-blog-server.git
                sudo docker-compose up -d --force-recreate --build

            나) my-blog-nest 
              [빌드] 
                sudo docker build -t ks78mk2/my-blog-server .
                sudo docker login -u ks78mk2 -p '비밀번호 입력란'
                sudo docker push ks78mk2/my-blog-server
              [빌드 후 배포]
                sudo docker stop backend
                sudo docker rm backend
                sudo docker pull ks78mk2/my-blog-server
                nohup sudo docker run -d --name backend --network myblogdocker_default ks78mk2/my-blog-server > nohup.out 2>&1 &

            다) my-blog-react
              [빌드]
                sudo docker build -t ks78mk2/my-blog-server .
                sudo docker login -u ks78mk2 -p '비밀번호 입력란'
                sudo docker push ks78mk2/my-blog-server
              [빌드 후 배포]
                sudo docker stop frontend
                sudo docker rm frontend
                sudo docker pull ks78mk2/my-blog
                nohup sudo docker run -d --name frontend --network myblog-docker_default  ks78mk2/my-blog > nohup.out 2>&1 &

        
